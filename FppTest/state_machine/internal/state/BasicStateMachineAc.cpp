// ======================================================================
// \title  BasicStateMachineAc.cpp
// \author Generated by fpp-to-cpp
// \brief  cpp file for Basic state machine
// ======================================================================

#include "/Users/bocchino/JPL/Tools/FPrime/bocchino/fprime/FppTest/state_machine/internal/state/BasicStateMachineAc.hpp"
#include "Fw/Types/Assert.hpp"

namespace FppTest {

  namespace State {

    // ----------------------------------------------------------------------
    // Constructors and Destructors
    // ----------------------------------------------------------------------

    BasicStateMachineBase ::
      BasicStateMachineBase()
    {

    }

    BasicStateMachineBase ::
      ~BasicStateMachineBase()
    {

    }

    // ----------------------------------------------------------------------
    // Initialization
    // ----------------------------------------------------------------------

    void BasicStateMachineBase ::
      init(const FwEnumStoreType id)
    {
      this->m_id = id;
      this->enter_S(Signal::__FPRIME_AC_INITIAL_TRANSITION);
    }

    // ----------------------------------------------------------------------
    // State and junction entry
    // ----------------------------------------------------------------------

    void BasicStateMachineBase ::
      enter_T(Signal signal)
    {
      this->m_state = State::T;
    }

    void BasicStateMachineBase ::
      enter_S(Signal signal)
    {
      this->m_state = State::S;
    }

  }

}
